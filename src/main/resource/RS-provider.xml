<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">


	<!-- 用于持有ApplicationContext,可以使用SpringBeanHelper.getBean('xxxx')的静态方法得到spring 
		bean对象lazy-init="false" -->
<!-- 	<bean class="com.summaryday.framework.db.SpringBeanHelper" />
	<bean id="baseDao"  class="com.summaryday.framework.d.BaseDaoImpl" /> -->
	<!-- <bean id="slaveDao" class="com.summaryday.framework.d.SlaveDaoImpl" /> -->

	<!-- 提供方应用信息，用于计算依赖关系 -->
	<dubbo:application name="RS_provider" />

	<!-- 使用multicast广播注册中心暴露服务地址 <dubbo:registry address="multicast://224.5.6.7:1234" 
		/> -->

	<!-- 使用zookeeper注册中心暴露服务地址 -->
	<!-- <dubbo:registry address="zookeeper://192.168.128.1:2181" /> -->
	<dubbo:registry address="zookeeper://127.0.0.1:2181" />

	<!-- 用dubbo协议在20880端口暴露服务 -->
	<dubbo:protocol name="dubbo" port="20880" />

	<!-- 声明需要暴露的服务接口 -->
	<dubbo:service interface="com.recycle.service.api.IUser"	        ref="userService" />
	<dubbo:service interface="com.recycle.service.api.IProduct"	        ref="productService" />
	<dubbo:service interface="com.recycle.service.api.IServiceStaff"	ref="serviceStaffService" />
	
	<!-- 具体的实现bean -->
	<bean id="userService"         class="com.cloud.recycle.service.UserServiceImpl" />
	<bean id="productService"      class="com.cloud.recycle.service.ProductServiceImpl" />
	<bean id="serviceStaffService" class="com.cloud.recycle.service.ServiceStaffImpl" />
	
   	<!--   <import resource="classpath*:jedis-data.xml"/>  -->

</beans>